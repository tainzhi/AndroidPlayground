import com.tainzhi.android.buildsrc.Libs

// ARouter switch
if (isModule.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs.kotlin'

//apply plugin: 'kotlin-allopen'

// ARouter
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdkVersion Libs.Configs.compileSdkVersion
    buildToolsVersion Libs.Configs.buildToolsVersion

    defaultConfig {
        minSdkVersion Libs.Configs.minSdkVersion
        targetSdkVersion Libs.Configs.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/buildModule/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        // 使用databinding
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    api(project(":router"))
    implementation Libs.Kotlin.stdlib
    implementation Libs.AndroidX.appcompat
    implementation Libs.AndroidX.recyclerview
    implementation Libs.AndroidX.constraintlayout
    implementation Libs.AndroidX.Navigation.fragmentKtx
    implementation Libs.AndroidX.Navigation.uiKtx
    implementation Libs.AndroidX.Room.runtime
    kapt Libs.AndroidX.Room.compiler
    implementation Libs.AndroidX.Lifecycle.extensions
    kapt Libs.AndroidX.Lifecycle.compiler
    implementation Libs.AndroidX.Lifecycle.viewmodelKtx
    implementation Libs.AndroidX.Lifecycle.extensions

    implementation Libs.Retrofit.retrofit
    implementation Libs.Retrofit.gsonConverter
    implementation Libs.Glide.glide

    implementation Libs.Dagger.dagger
    kapt Libs.Dagger.compiler
    implementation Libs.Dagger.android
    implementation Libs.Dagger.androidSupport
    kapt Libs.Dagger.androidProcessor

    implementation(Libs.ARouter.api)
    kapt(Libs.ARouter.compiler)

    implementation(Libs.timber)
    implementation(Libs.Glide.glide)

}
