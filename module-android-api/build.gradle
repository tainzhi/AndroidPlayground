import com.tainzhi.android.buildsrc.Libs

// ARouter switch
if (isModule.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'

// ARouter
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {
    compileSdkVersion Libs.Version.compileSdkVersion
    buildToolsVersion Libs.Version.buildToolsVersion
    defaultConfig {
        if (!isModule.toBoolean()) {
            applicationId "com.tainzhi.sample.api"

        }
        minSdkVersion Libs.Version.minSdkVersion
        targetSdkVersion Libs.Version.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    resourcePrefix "api_"
    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/buildModule/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation(Libs.Kotlin.stdlib)
    implementation(Libs.AndroidX.appcompat)
    implementation(Libs.AndroidX.constraintlayout)
    implementation(Libs.AndroidX.recyclerview)
    implementation(Libs.AndroidX.Navigation.fragmentKtx)
    implementation(Libs.AndroidX.Navigation.uiKtx)
    implementation(Libs.Google.material)
    implementation(Libs.baseRecyclerViewAdapterHelper)

    implementation(Libs.ARouter.api)
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt(Libs.ARouter.compiler)
}
